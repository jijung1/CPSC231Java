import java.util.ArrayList;
import java.io.ObjectOutputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.FileNotFoundException;
import java.lang.ClassNotFoundException;
import java.io.File;
import java.util.Scanner;

public class LibraryDemo
{

  public static void main(String[] args)
  {
    // read values in by parsing such in order to read in multiple String arrays with required data to initialize Students Books, Movies, Periodicals, and Rooms
    //or load a pre-existing library file with pre-loaded database

    try
    {
      boolean boole = true;
      Scanner keyboard = new Scanner(System.in);
      ObjectOutputStream outputStream = new ObjectOutputStream(new FileOutputStream("datafile"));

      LibraryDB libraryDB = new LibraryDB();
      ArrayList<Student> chapmanStudents = AutoGenLibrary.genStudents();
      ArrayList<Books> chapmanBooks = AutoGenLibrary.genBooks();
      ArrayList<Movies> chapmanMovies = AutoGenLibrary.genMovies();
      ArrayList<Periodicals> chapmanPeriodicals = AutoGenLibrary.genPeriodicals();
      ArrayList<Rooms> chapmanRooms = AutoGenLibrary.genRooms();

      //there should be a call to a tool to automatically generate a populated library datebase here
      //tool should be a method that returns an ArrayList of each item type.

      libraryDB.setChapmanStudents(chapmanStudents);
      libraryDB.setChapmanBooks(chapmanBooks);
      libraryDB.setChapmanPeriodicals(chapmanPeriodicals);
      libraryDB.setChapmanRooms(chapmanRooms);
      libraryDB.setChapmanMovies(chapmanMovies);

      while(boole)
      {
      //  keyboard.nextLine();  //clear buffer

        System.out.println("Please choose from the following options: \n(1) Add a new item\n(2) Remove a lost item\n(3) Register a new student\n(4) Unregister an old student\n(5) Check status of an item\n(6) Checkout an item");
        System.out.println("(7) Return an item\n(8) List items by type\n(9) Save\n(10) Load Saved Data\n(11) Empty Library Data\n(12) Revert to autogenerated Library Data\n(13) Exit");
        int choice = keyboard.nextInt();
        String barcode;
        int identNum;
        switch (choice)
        {
          case 1:
            System.out.println("What type of item do you want to add:\n(1) A book\n(2) A movie\n(3) A periodical\n(4) A room");
            choice = keyboard.nextInt();
            switch(choice)
            {
              case 1:
                keyboard.nextLine();
                System.out.println("Please enter the Barcode: ");
                barcode = keyboard.nextLine();
                System.out.println("Please enter the Book Title: ");
                String newBookTitle = keyboard.nextLine();
                System.out.println("Please enter the Author name: ");
                String newBookAuthor = keyboard.nextLine();
                System.out.println("Please enter the number of pages: ");
                int newBookNumPages = keyboard.nextInt();
                System.out.println("Please enter the ISBN: ");
                long newBookIsbn = keyboard.nextLong();
                Books book = new Books(newBookTitle,newBookAuthor,newBookNumPages,newBookIsbn,barcode);
                System.out.println(libraryDB.addBook(book));
                break;
              case 2: //String title, int year, int runTime, String barcode
                keyboard.nextLine();
                System.out.println("Please enter the Barcode: ");
                barcode = keyboard.nextLine();
                System.out.println("Please enter the Movie Title: ");
                String newMovieTitle = keyboard.nextLine();
                System.out.println("Please enter the Movie year: ");
                int newMovieYear = keyboard.nextInt();
                System.out.println("Please enter the Movie runtime in minutes: ");
                int newMovieRunTime = keyboard.nextInt();
                Movies movie = new Movies(newMovieTitle,newMovieYear,newMovieRunTime,barcode);
                System.out.println(libraryDB.addMovie(movie));
                break;
              case 3: //String name, String dateReleased, String barcode
                keyboard.nextLine();
                System.out.println("Please enter the Barcode: ");
                barcode = keyboard.nextLine();
                System.out.println("Please enter the Periodical name: ");
                String newPeriodicalName = keyboard.nextLine();
                System.out.println("Please enter the date released dd mmm yyyy (i.e. 01 Jan 1999): ");
                String newPeriodicalDateReleased = keyboard.nextLine();
                Periodicals periodical = new Periodicals(newPeriodicalName,newPeriodicalDateReleased,barcode);
                System.out.println(libraryDB.addPeriodical(periodical));
                break;
              case 4: //int roomNum, int capacity, boolean compAllowed, String barcode
                keyboard.nextLine();
                System.out.println("Please enter the Barcode: ");
                barcode = keyboard.nextLine();
                System.out.println("Please enter the room number: ");
                int newRoomNum = keyboard.nextInt();
                System.out.println("Please enter the room capacity: ");
                int newRoomCapacity = keyboard.nextInt();
                System.out.println("Are computers allowed in this room? (y/n): ");
                String compAllow = keyboard.nextLine();
                boolean newRoomCompAllow = false;
                if (compAllow.toLowerCase().equals("y") || compAllow.toLowerCase().equals("yes"))
                {
                  newRoomCompAllow = true;
                }
                Rooms room = new Rooms(newRoomNum,newRoomCapacity,newRoomCompAllow,barcode);
                System.out.println(libraryDB.addRoom(room));
                break;
            }
            break;
          case 2: //remove lost item
            keyboard.nextLine();
            System.out.println("Please enter Item barcode to delete from system: ");
            System.out.println(libraryDB.removeLostItem(keyboard.nextLine()));
            break;

          case 3:  //register new student   String firstName, String lastName, String email, long phoneNum, int identNum
            keyboard.nextLine();
            System.out.println("Please enter Student's first name: ");
            String newStudentFName = keyboard.nextLine();
            System.out.println("Please enter Student's last name: ");
            String newStudentLName = keyboard.nextLine();
            System.out.println("Please enter Student's email: ");
            String newStudentEmail = keyboard.nextLine();
            System.out.println("Please enter Student's phone number : (i.e 7141231234) ");
            Long newStudentPhoneNum = keyboard.nextLong();
            System.out.println("Please enter the Student's ID number: ");
            identNum = keyboard.nextInt();
            Student student = new Student(newStudentFName,newStudentLName,newStudentEmail,newStudentPhoneNum,identNum);
            System.out.println(libraryDB.registerStudent(student));
            break;

          case 4: //unregister old student removeStudent(int identNum)
            keyboard.nextLine();
            System.out.println("Please enter ID number of student to remove: ");
            identNum = keyboard.nextInt();
            System.out.println(libraryDB.removeStudent(identNum));
            break;
          case 5: //check status of item  itemStatus(String barcode)
            keyboard.nextLine();
            System.out.println("Please enter Item barcode: ");
            barcode = keyboard.nextLine();
            System.out.println(libraryDB.itemStatus(barcode));
            break;
          case 6: //check out an item   itemCheckOut(String barcode, int identNum)
            keyboard.nextLine();
            System.out.println("Please enter Item barcode: ");
            barcode = keyboard.nextLine();
            System.out.println("Please enter Student's ID number: ");
            identNum = keyboard.nextInt();
            System.out.println(libraryDB.itemCheckOut(barcode,identNum));
            break;
          case 7: //return an item  itemCheckIn(String barcode)
            keyboard.nextLine();
            System.out.println("Please enter Item barcode: ");
            barcode = keyboard.nextLine();
            System.out.println(libraryDB.itemCheckIn(barcode));
            break;
          case 8: //list items by type  libraryDB.listBooks(), libraryDB.listMovies()...
            keyboard.nextLine();
            System.out.println("What type of item do you want to list?\n(1) Books\n(2) Movies\n(3) Periodicals\n(4) Rooms");
            choice = keyboard.nextInt();
            switch(choice)
            {
              case 1:
                String[] books = libraryDB.listBooks();
                for(int i = 0; i < books.length; i++)
                System.out.println(books[i]);
                break;
              case 2:
                String[] movies = libraryDB.listMovies();
                for(int i = 0; i < movies.length; i++)
                System.out.println(movies[i]);
                break;
              case 3:
                String[] periodicals = libraryDB.listPeriodicals();
                for(int i = 0; i < periodicals.length; i++)
                System.out.println(periodicals[i]);
                break;
              case 4:
                String[] rooms = libraryDB.listRooms();
                for(int i = 0; i < rooms.length; i++)
                System.out.println(rooms[i]);
            }
            break;
          case 9: //save database //need fileoutputstream
            outputStream.writeObject(libraryDB);
            System.out.println("data sent to file");
            break;
          case 10:  //load database from external file  allow multiple saved files?
            String fileName = keyboard.nextLine();
            ObjectInputStream inputStream = new ObjectInputStream(new FileInputStream("datafile"));
            libraryDB = (LibraryDB) inputStream.readObject();
            System.out.println("Successfully loaded saved file");
            break;
          case 11:  //empty library data
            libraryDB = new LibraryDB();
            break;
          case 12:  //revert to autogenerated library data.
            libraryDB.setChapmanStudents(chapmanStudents);
            libraryDB.setChapmanBooks(chapmanBooks);
            libraryDB.setChapmanPeriodicals(chapmanPeriodicals);
            libraryDB.setChapmanRooms(chapmanRooms);
            libraryDB.setChapmanMovies(chapmanMovies);
            break;
          case 13:
            outputStream.close();
            boole = false;
        }
      }
    }
    catch (IOException e)
    {
      System.out.println(e.getMessage());
    }
    catch (ClassNotFoundException e)
    {
      System.out.println(e.getMessage());
    }

  }
}
